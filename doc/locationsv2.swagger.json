{
  "swagger": "2.0",
  "info": {
    "title": "Locations API",
    "description": "API to manage locations.",
    "version": "1.0",
    "contact": {
      "name": "DataTrails",
      "url": "https://www.datatrails.ai"
    }
  },
  "tags": [
    {
      "name": "Locations",
      "description": "Read and modify Locations"
    }
  ],
  "basePath": "/archivist/v2/locations",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/archivist/v2/locations": {
      "get": {
        "summary": "List locations",
        "description": "Returns a paginated list of locations",
        "operationId": "Locations_ListLocations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListLocationsResponse"
            }
          },
          "401": {
            "description": "Returned when the user is not authenticated to the system."
          },
          "403": {
            "description": "Returned when the user is not authorized to read the location."
          },
          "429": {
            "description": "Returned when a user exceeds their subscription's rate limit for requests."
          }
        },
        "parameters": [
          {
            "name": "order_by",
            "description": "Specify the sort order for the results. By display_name and by named\nextended attribute are supported.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DEFAULT",
              "DISPLAY_NAME"
            ],
            "default": "DEFAULT"
          },
          {
            "name": "page_size",
            "description": "Maximum locations per page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_token",
            "description": "The next_page_token returned from a previous list request if any.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "display_name",
            "description": "Further fields are bound to query parameters and act to filter the result",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "attributes[string]",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Locations"
        ]
      },
      "post": {
        "summary": "Create a location",
        "description": "Create a new location.",
        "operationId": "Locations_CreateLocation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/archivistv2Location"
            }
          },
          "401": {
            "description": "Returned when the user is not authenticated to the system."
          },
          "402": {
            "description": "Returned when the user's quota of locations policies has been reached."
          },
          "403": {
            "description": "Returned when the user is not authorized to create a location."
          },
          "429": {
            "description": "Returned when a user exceeds their subscription's rate limit for requests."
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "The body of a request to create new location.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2CreateLocationRequest"
            }
          }
        ],
        "tags": [
          "Locations"
        ]
      }
    },
    "/archivist/v2/locations/{uuid}": {
      "get": {
        "summary": "Get a location",
        "description": "Returns the identified location",
        "operationId": "Locations_GetLocation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/archivistv2Location"
            }
          },
          "401": {
            "description": "Returned when the user is not authenticated to the system."
          },
          "403": {
            "description": "Returned when the user is not authorized to read the location."
          },
          "404": {
            "description": "Returned when the identified location does not exist."
          },
          "429": {
            "description": "Returned when a user exceeds their subscription's rate limit for requests."
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "description": "Specify the Location UUID where `locations/{uuid}` is the Location Identity e.g. `add30235-1424-4fda-840a-d5ef82c4c96f` from Identity `locations/add30235-1424-4fda-840a-d5ef82c4c96f`",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Locations"
        ]
      },
      "delete": {
        "summary": "Delete a location",
        "description": "Delete the identified location",
        "operationId": "Locations_DeleteLocation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "401": {
            "description": "Returned when the user is not authenticated to the system."
          },
          "403": {
            "description": "Returned when the user is not authorized to delete the location."
          },
          "404": {
            "description": "Returned when the identified location does not exist."
          },
          "429": {
            "description": "Returned when a user exceeds their subscription's rate limit for requests."
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "description": "Specify the Location UUID where `locations/{uuid}` is the Location Identity e.g. `add30235-1424-4fda-840a-d5ef82c4c96f` from Identity `locations/add30235-1424-4fda-840a-d5ef82c4c96f`",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Locations"
        ]
      },
      "patch": {
        "summary": "Update a location's details",
        "description": "Perform a full or partial update of the identified location",
        "operationId": "Locations_UpdateLocation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/archivistv2Location"
            }
          },
          "401": {
            "description": "Returned when the user is not authenticated to the system."
          },
          "403": {
            "description": "Returned when the user is not authorized to update the location."
          },
          "404": {
            "description": "Returned when the identified location does not exist."
          },
          "429": {
            "description": "Returned when a user exceeds their subscription's rate limit for requests."
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "description": "Specify the Location UUID where `locations/{uuid}` is the Location Identity e.g. `add30235-1424-4fda-840a-d5ef82c4c96f` from Identity `locations/add30235-1424-4fda-840a-d5ef82c4c96f`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location",
            "description": "The body provides the location fields to update",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/archivistv2Location"
            }
          },
          {
            "name": "mask",
            "description": "The mask says exactly which fields are to be updated. This\nremoves the ambiguity caused by 'zero' valued fields.\nhttps://grpc-ecosystem.github.io/grpc-gateway/docs/patch.html",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Locations"
        ]
      }
    },
    "/archivist/v2/locations/{uuid}/permissions": {
      "get": {
        "summary": "Get location permissions",
        "description": "Get location permissions for identified location",
        "operationId": "Locations_GetLocationPermissions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LocationPermissions"
            }
          },
          "401": {
            "description": "Returned when the user is not authenticated to the system."
          },
          "403": {
            "description": "Returned when the user is not authorized to list permissions for the location."
          },
          "404": {
            "description": "Returned when the identified location does not exist."
          },
          "429": {
            "description": "Returned when a user exceeds their subscription's rate limit for requests."
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "description": "Specify the Location UUID where `locations/{uuid}` is the Location Identity e.g. `add30235-1424-4fda-840a-d5ef82c4c96f` from Identity `locations/add30235-1424-4fda-840a-d5ef82c4c96f`",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Locations"
        ]
      },
      "patch": {
        "summary": "Patch location permissions",
        "description": "Patch location permissions for identified location",
        "operationId": "Locations_SetLocationPermissions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LocationPermissions"
            }
          },
          "401": {
            "description": "Returned when the user is not authenticated to the system."
          },
          "403": {
            "description": "Returned when the user is not authorized to access permissions for the location."
          },
          "404": {
            "description": "Returned when the identified location does not exist."
          },
          "429": {
            "description": "Returned when a user exceeds their subscription's rate limit for requests."
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "description": "Specify the Location UUID where `locations/{uuid}` is the Location Identity e.g. `add30235-1424-4fda-840a-d5ef82c4c96f` from Identity `locations/add30235-1424-4fda-840a-d5ef82c4c96f`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "permissions",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2SubjectIdentities"
            }
          }
        ],
        "tags": [
          "Locations"
        ]
      }
    }
  },
  "definitions": {
    "ListLocationsRequestOrderBy": {
      "type": "string",
      "enum": [
        "DEFAULT",
        "DISPLAY_NAME"
      ],
      "default": "DEFAULT",
      "title": "Supported sort orders"
    },
    "archivistv2Location": {
      "type": "object",
      "example": {
        "identity": "locations/08838336-c357-460d-902a-3aba9528dd22",
        "display_name": "Macclesfield, Cheshire",
        "description": "Manufacturing site, North West England, Macclesfield, Cheshire",
        "latitude": 53.2546799,
        "longitude": -2.1213956,
        "attributes": {
          "director": "John Smith",
          "address": "Bridgewater, Somerset",
          "Facility Type": "Manufacture",
          "support_email": "support@macclesfield.com",
          "support_phone": "123 456 789"
        }
      },
      "properties": {
        "identity": {
          "type": "string",
          "description": "Unique identification for the location, Relative Resource Name",
          "title": "Relative Resource Name for the location. Always generated by the system. Allways contains a uuid"
        },
        "display_name": {
          "type": "string",
          "description": "Customer friendly name for the location.",
          "maxLength": 128
        },
        "description": {
          "type": "string",
          "description": "Free text description of the location",
          "maxLength": 8096
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "Latitude in decimal degrees",
          "title": "Latitude in decimal degrees",
          "maximum": 90,
          "minimum": -90
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "description": "Longitude in decimal degrees",
          "title": "Longitude in decimal degrees",
          "maximum": 180,
          "minimum": -180
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v2Attribute"
          },
          "description": "key value mapping of asset properties"
        },
        "tenant": {
          "type": "string",
          "description": "Tenent id",
          "title": "Location creating customer tenant ID",
          "maxLength": 128
        },
        "owner": {
          "type": "string",
          "description": "wallet address of the location owner",
          "maxLength": 128
        }
      },
      "description": "Describes a location for asset resources"
    },
    "v1Cap": {
      "type": "object",
      "properties": {
        "resource_type": {
          "type": "string",
          "description": "String identifying the capped resource type"
        },
        "resource_remaining": {
          "type": "string",
          "format": "int64",
          "description": "Number of capped resources remaining"
        }
      }
    },
    "v1Caps": {
      "type": "object",
      "properties": {
        "caps": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Cap"
          },
          "description": "List of relevant capped resources"
        }
      }
    },
    "v2Attribute": {
      "type": "object",
      "properties": {
        "str_val": {
          "type": "string"
        },
        "dict_val": {
          "$ref": "#/definitions/v2DictAttr"
        },
        "list_val": {
          "$ref": "#/definitions/v2ListAttr"
        }
      }
    },
    "v2CreateLocationRequest": {
      "type": "object",
      "example": {
        "display_name": "Macclesfield, Cheshire",
        "description": "Manufacturing site, North West England, Macclesfield, Cheshire",
        "latitude": 53.2546799,
        "longitude": -2.1213956,
        "attributes": {
          "director": "John Smith",
          "address": "Bridgewater, Somerset",
          "Facility Type": "Manufacture",
          "support_email": "support@macclesfield.com",
          "support_phone": "123 456 789"
        }
      },
      "properties": {
        "display_name": {
          "type": "string",
          "description": "Customer friendly name for the location.",
          "maxLength": 128
        },
        "description": {
          "type": "string",
          "description": "Free text description of the location",
          "maxLength": 8096
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "Latitude in decimal degrees format.",
          "maximum": 90,
          "minimum": -90
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "description": "longitude in decimal degrees format.",
          "maximum": 180,
          "minimum": -180
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v2Attribute"
          },
          "description": "key value mapping of location properties"
        }
      },
      "description": "The body of a request to create new location.",
      "required": [
        "display_name",
        "latitude",
        "longitude"
      ]
    },
    "v2DictAttr": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v2ListAttr": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2DictAttr"
          }
        }
      }
    },
    "v2ListLocationsResponse": {
      "type": "object",
      "example": {
        "locations": [
          {
            "identity": "locations/08838336-c357-460d-902a-3aba9528dd22",
            "display_name": "Macclesfield, Cheshire",
            "description": "Manufacturing site, North West England, Macclesfield, Cheshire",
            "latitude": 53.2546799,
            "longitude": -2.1213956,
            "attributes": {
              "director": "John Smith",
              "address": "Bridgewater, Somerset",
              "Facility Type": "Manufacture",
              "support_email": "support@macclesfield.com",
              "support_phone": "123 456 789"
            }
          },
          {
            "identity": "locations/19749457-d468-572c-6e3b-3acb0417ec13",
            "display_name": "Cardiff, Glamorganshire",
            "description": "Distribution Centre, Wales, Cardiff, Glamorganshire",
            "latitude": 51.481583,
            "longitude": -3.17909,
            "attributes": {
              "director": "June Smith",
              "address": "Newtown",
              "Facility Type": "Distribution",
              "support_email": "support@example.com",
              "support_phone": "321 654 987"
            }
          }
        ],
        "next_page_token": "eyJvcmlnX3JlcSI6eyJwYWdlX3NpemUiOjJ9LCJza2lwIjoyfQ=="
      },
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/archivistv2Location"
          },
          "title": "There will be at most ListLocationsRequest.page_size items"
        },
        "next_page_token": {
          "type": "string",
          "description": "Token to retrieve the next page of results or empty if there are none."
        }
      },
      "description": "Describes a location for asset resources"
    },
    "v2LocationPermissions": {
      "type": "object",
      "example": {
        "location_identity": "locations/08838336-c357-460d-902a-3aba9528dd22",
        "permissions": {
          "subject_identities": [
            "bob@example.com",
            "orgb"
          ]
        }
      },
      "properties": {
        "location_identity": {
          "type": "string",
          "description": "The location identity in the form: `locations/{uuid}`",
          "readOnly": true
        },
        "permissions": {
          "$ref": "#/definitions/v2SubjectIdentities",
          "description": "Subject identities this location is shared with",
          "readOnly": true
        }
      },
      "description": "Permissions for a location."
    },
    "v2SubjectIdentities": {
      "type": "object",
      "example": {
        "subject_identities": [
          "bob@example.com",
          "orgb"
        ]
      },
      "properties": {
        "subject_identities": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 128
          },
          "description": "List of subject identities"
        }
      },
      "description": "Subject permissions."
    }
  }
}
